import numpy as np


def FindSecondRecursive(n,A):
    first = FindMaxTournament(0,n-1,A)
    print("-*first-*-",first)
    second=FindMaxTournament(1,len(first)-1,first)
    print("-*-second*-", second)
    return second

def FindMaxTournament(low,high,A):
    if low == high:
        compare=[]
        compare.append(A[low])
        print(compare)
        return compare
    compare1 = FindMaxTournament(low,(int)((low+high)/2),A)
    print("-------"+str(low)+"："+str((int)((low+high)/2)))
    compare2 = FindMaxTournament((int)((low + high) / 2)+1,high, A)
    print("*******"+str((int)((low + high) / 2)+1)+"："+str(high))
    if compare1[0] > compare2[0]:
        newcompare1= compare1.copy()
        newcompare1.extend(compare2)
        print(newcompare1)
        return newcompare1

    newcompare2 = compare2.copy()
    newcompare2.extend(compare1)
    print(newcompare2)
    return newcompare2

a=[10,1,3,5,9,8,15,11]
secondMax = FindSecondRecursive(len(a),a)
print("&&&&&&&&&&&&&&&&&&&")
print(np.sort(a))
print(secondMax)